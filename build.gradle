buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'maven-publish'

String build_number = System.getenv().BUILD_BUILDNUMBER
if(build_number == null) {
    build_number = ".9999"
}else{
    String build_number_parts = build_number.tokenize(".")
    build_number = build_number_parts[build_number_parts.size()-1]
}
String semver = "${version_major}.${version_minor}"

version = "1.16.5-${semver}${build_number}"
group = "${mod_group}"
archivesBaseName = "${mod_name}"


java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

minecraft {
    mappings channel: "official", version: project.mcversion
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                brewteamlib {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                brewteamlib {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'rfllib', '--all', '--output', file('src/generated/resources/')
            mods {
                brewteamlib {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    minecraft([
            group  : "${project.forgegroup}",
            name   : 'forge',
            version: "${project.mcversion}-${project.forgeversion}"
    ])
    implementation fg.deobf("curse.maven:worldstripper-250603:3415529")
    implementation fg.deobf("curse.maven:the-one-proble-245211:3665853")
    compileOnly fg.deobf("mezz.jei:jei-${project.mcversion}:7.7.1.149:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${project.mcversion}:7.7.1.149")
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.7.2"
}



repositories {
    maven { url = "https://dvs1.progwml6.com/files/maven" } //JEI
    maven { url = "https://maven.tterrag.com" } //TOP
    maven { url = "https://maven.blamejared.com" } //Craft Tweaker
    maven { url = "https://maven.theillusivec4.top" } //Curios
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}



// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "FMLAT" : 'accesstransformer.cfg',
            "Specification-Title": mod_name,
            "Specification-Vendor": mod_group,
            "Specification-Version": "${semver}",
            "Implementation-Title": project.name,
            "Implementation-Version": "${project.version}",
            "Implementation-Vendor" : mod_group,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')


//publishing {
//    publications {
//        mavenJava(MavenPublication) {
//            artifact jar
//        }
//    }
//    repositories {
//        maven {
//            url "file:///${project.projectDir}/mcmodsrepo"
//        }
//    }
//}
