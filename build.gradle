//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id "com.github.breadmoirai.github-release" version "2.2.12"
    id 'com.matthewprenger.cursegradle' version '1.4.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'maven-publish'


String build_number = rootProject.properties.get("build.number")
if(build_number == null) {
    build_number = "${version_patch}"
}
String semver = "${mcversion}-${version_major}.${version_minor}."

version = "${semver}${build_number}"
group = "${mod_group}"
archivesBaseName = "${mod_name}"


java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))


minecraft {
    mappings channel: 'official', version: project.mcversion
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'brewtools'
            mods {
                brewtools {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'brewtools'
            mods {
                brewtools {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'brewtools'
            mods {
                brewtools {
                    source sourceSets.main
                }
            }
        }
        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'brewtools', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                brewtools {
                    source sourceSets.main
                }
            }
        }
    }
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven { url "https://maven.theillusivec4.top/" }
    maven { // TOP
        name 'McJty maven'
        url "https://maven.k-4u.nl"
    }
    flatDir {
        dirs 'libs'
    }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        // location of a maven mirror for JEI files, as a fallback
        name = "ModMaven"
        url = "https://modmaven.k-4u.nl"
    }
}



dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.0.32'
    compileOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}:api")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios-forge:${curios_version}")
    compileOnly fg.deobf("mezz.jei:jei-${version_mcjei}:${jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-${version_mcjei}:${jei_version}")
    runtimeOnly fg.deobf("mcjty.theoneprobe:theoneprobe:1.18-5.1.0-8") {
        transitive = false
    }
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "FMLAT" : 'accesstransformer.cfg',
                "Specification-Title"     : mod_name,
                "Specification-Vendor"    : mod_group,
                "Specification-Version"   : "${semver}",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${project.version}",
                "Implementation-Vendor"   : mod_group,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

def names=[]
fileTree("build/libs").visit {FileVisitDetails details -> names << details.file.path }
githubRelease {
    token {githubToken}
    owner "brewingcoder"
    repo { mod_name }
    tagName version
    targetCommitish "master"
    releaseName version
    body """\
## BrewTools 1.18.2 CHANGELOG
# 1.2.x
#============================

${changelog().call()}
"""
    draft false
    prerelease false
    releaseAssets=names
    overwrite false
    dryRun false
    apiEndpoint "https://api.github.com"
}

curseforge {
    apiKey = "${curseToken}"
    project{
        id = "585247"
        addGameVersion "1.18.2"
        releaseType="release"
        changelogType = "text"
        changelog = "${githubRelease.body.get()}"

        mainArtifact("build/libs/BrewTools-${version}.jar") {
            displayName = "BrewTools ${version}"
        }
        relations {
            requiredDependency 'curios'
        }
    }
    options {
        //noinspection GrDeprecatedAPIUsage
        debug = false
        javaVersionAutoDetect = true
        javaIntegration = false
        forgeGradleIntegration = false
    }
}

